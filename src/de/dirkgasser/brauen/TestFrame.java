package de.dirkgasser.brauen;

import static de.dirkgasser.brauen.BrewComputerMain.brewframe;
import static de.dirkgasser.brauen.BrewComputerMain.pump;
import static de.dirkgasser.brauen.BrewComputerMain.recipeframe;
import static de.dirkgasser.brauen.BrewComputerMain.gpio;
import static de.dirkgasser.brauen.BrewComputerMain.heater;
import static de.dirkgasser.brauen.BrewComputerMain.buzzer;
import java.awt.Color;
import javax.swing.JTextField;
import javax.swing.JToggleButton;

/**
 * Test screen to test brew board <br>
 * All functions of the brew board can be tested: <br>
 * temperature sensor <br>
 * pump <br>
 * buzzer <br>
 * heater <br>
 * @author Dirk Gasser
 * @version 1.0
 */
public class TestFrame extends javax.swing.JFrame {
    Integer power;
    /**
     * Creates new form TestFrame
     */
    public TestFrame() {
        initComponents();
        power = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu3 = new javax.swing.JMenu();
        jtbPump = new javax.swing.JToggleButton();
        jbPlus = new javax.swing.JButton();
        jbMinus = new javax.swing.JButton();
        jlPower = new javax.swing.JLabel();
        jtbHeat = new javax.swing.JToggleButton();
        jtTemperatur = new javax.swing.JTextField();
        jbBuzzer = new javax.swing.JButton();
        jtbPumpReverse = new javax.swing.JToggleButton();
        jtDeltaTemp = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jmRecipe = new javax.swing.JMenu();
        jmProcess = new javax.swing.JMenu();
        jmTest = new javax.swing.JMenu();

        jMenu3.setText("jMenu3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jtbPump.setText("Pumpe");
        jtbPump.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtbPumpActionPerformed(evt);
            }
        });

        jbPlus.setText("+");
        jbPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPlusActionPerformed(evt);
            }
        });

        jbMinus.setText("-");
        jbMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbMinusActionPerformed(evt);
            }
        });

        jlPower.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jlPower.setText("0%");

        jtbHeat.setBackground(new java.awt.Color(102, 255, 102));
        jtbHeat.setText("Heizen");
        jtbHeat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtbHeatActionPerformed(evt);
            }
        });

        jtTemperatur.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtTemperatur.setText("---");
        jtTemperatur.setEnabled(false);

        jbBuzzer.setText("Buzzer");
        jbBuzzer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuzzerActionPerformed(evt);
            }
        });

        jtbPumpReverse.setText("<html>\nPumpe<br>\nR체ckw채rts\n<html>");
        jtbPumpReverse.setActionCommand("Pumpe\nR체ckw채rts");
        jtbPumpReverse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtbPumpReverseActionPerformed(evt);
            }
        });

        jtDeltaTemp.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtDeltaTemp.setText("---");
        jtDeltaTemp.setEnabled(false);

        jMenuBar1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jMenuBar1.setMinimumSize(new java.awt.Dimension(100, 100));
        jMenuBar1.setName(""); // NOI18N
        jMenuBar1.setPreferredSize(new java.awt.Dimension(169, 50));
        jMenuBar1.setRequestFocusEnabled(false);

        jmRecipe.setText("Rezept");
        jmRecipe.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jmRecipe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jmRecipeMouseClicked(evt);
            }
        });
        jMenuBar1.add(jmRecipe);

        jmProcess.setText("Brauen");
        jmProcess.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jmProcess.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jmProcessMouseClicked(evt);
            }
        });
        jmProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmProcessActionPerformed(evt);
            }
        });
        jMenuBar1.add(jmProcess);

        jmTest.setText("Test");
        jmTest.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jMenuBar1.add(jmTest);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jtbPump, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jlPower, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtbPumpReverse, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jbPlus, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbMinus, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jbBuzzer, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jtbHeat, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(56, 56, 56)
                                .addComponent(jtTemperatur, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(jtDeltaTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jtbPump, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                        .addComponent(jtTemperatur, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                        .addComponent(jtDeltaTemp, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbMinus, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbPlus, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbBuzzer, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jtbHeat, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25)
                .addComponent(jtbPumpReverse, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jlPower, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(129, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * 
     * @param evt not used
     */
    private void jmProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmProcessActionPerformed
        // TODO add your handling code here:
        FullScreen.fullScreen(brewframe, false);
        brewframe.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jmProcessActionPerformed

    private void jtbHeatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtbHeatActionPerformed
        // TODO add your handling code here:
        if(((JToggleButton) evt.getSource()).isSelected()) {
            ((JToggleButton) evt.getSource()).setBackground(Color.red);
            heater.setOn();
        } else {
            ((JToggleButton) evt.getSource()).setBackground(Color.green);
            heater.setOff();
        }
    }//GEN-LAST:event_jtbHeatActionPerformed

    private void jtbPumpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtbPumpActionPerformed
        // TODO add your handling code here:
        if(((JToggleButton) evt.getSource()).isSelected()) {
            jtbPumpReverse.setSelected(false);
            jlPower.setText("100 %");
            power = 100;
            pump.setOn();
        } else {
            jlPower.setText("0 %");
            power = 0;
            pump.setOff();
        }
    }//GEN-LAST:event_jtbPumpActionPerformed

    private void jbPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPlusActionPerformed
        // TODO add your handling code here:
        if (power < 100) {
            power++;
            jlPower.setText(power.toString() + " %");
            pump.setRate(power);
        }
    }//GEN-LAST:event_jbPlusActionPerformed

    private void jbMinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbMinusActionPerformed
        // TODO add your handling code here:
        if (power > 0) {
            power--;
            jlPower.setText(power.toString() + " %");
            pump.setRate(power);
        }
    }//GEN-LAST:event_jbMinusActionPerformed

    private void jmRecipeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jmRecipeMouseClicked
        // TODO add your handling code here:
        FullScreen.fullScreen(recipeframe, false);
        recipeframe.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jmRecipeMouseClicked

    private void jbBuzzerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuzzerActionPerformed
        // TODO add your handling code here:
        buzzer.beep();
    }//GEN-LAST:event_jbBuzzerActionPerformed

    private void jtbPumpReverseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtbPumpReverseActionPerformed
        // TODO add your handling code here:
        if(((JToggleButton) evt.getSource()).isSelected()) {
            jtbPump.setSelected(false);
            jlPower.setText("100 %");
            power = 100;
            pump.setBackward();
            jtbPump.setSelected(false);
        } else {
            jlPower.setText("0 %");
            power = 0;
            pump.setOff();
        }
    }//GEN-LAST:event_jtbPumpReverseActionPerformed

    private void jmProcessMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jmProcessMouseClicked
        // TODO add your handling code here:
        FullScreen.fullScreen(brewframe, false);
        brewframe.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jmProcessMouseClicked
    
    public JTextField getTempField() {
       return jtTemperatur;
    }
    
    public JTextField getDeltaTempField() {
       return jtDeltaTemp;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JButton jbBuzzer;
    private javax.swing.JButton jbMinus;
    private javax.swing.JButton jbPlus;
    private javax.swing.JLabel jlPower;
    private javax.swing.JMenu jmProcess;
    private javax.swing.JMenu jmRecipe;
    private javax.swing.JMenu jmTest;
    private javax.swing.JTextField jtDeltaTemp;
    private javax.swing.JTextField jtTemperatur;
    private javax.swing.JToggleButton jtbHeat;
    private javax.swing.JToggleButton jtbPump;
    private javax.swing.JToggleButton jtbPumpReverse;
    // End of variables declaration//GEN-END:variables
}